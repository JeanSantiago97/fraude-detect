# 1Ô∏è‚É£ Iniciar o Zookeeper
docker run -d --name zookeeper -p 2181:2181 wurstmeister/zookeeper

# 2Ô∏è‚É£ Iniciar o Kafka
docker run -d --name kafka --link zookeeper:zookeeper -p 9092:9092 -e KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181 -e KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092 -e KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092 wurstmeister/kafka

docker exec -it kafka kafka-topics.sh --create --topic transacoes --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

# 3Ô∏è‚É£ Verificar se Kafka e Zookeeper est√£o rodando
docker ps

# 4Ô∏è‚É£ Criar o t√≥pico 'transacoes'
docker exec -it kafka kafka-topics.sh --create --topic transacoes --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

# 5Ô∏è‚É£ Criar o t√≥pico 'fraudes'
docker exec -it kafka kafka-topics.sh --create --topic fraudes --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1

# 6Ô∏è‚É£ Listar os t√≥picos criados
docker exec -it kafka kafka-topics.sh --list --bootstrap-server localhost:9092

# 7Ô∏è‚É£ Enviar mensagens manualmente para 'transacoes'
docker exec -it kafka kafka-console-producer.sh --broker-list localhost:9092 --topic transacoes

# 8Ô∏è‚É£ Consumir mensagens do t√≥pico 'transacoes'
docker exec -it kafka kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic transacoes --from-beginning

# 9Ô∏è‚É£ Consumir mensagens do t√≥pico 'fraudes'
docker exec -it kafka kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic fraudes --from-beginning

# üîü Reiniciar Kafka e Zookeeper
docker restart zookeeper kafka

# üîÑ Parar Kafka e Zookeeper
docker stop zookeeper kafka
"""

# Criando um arquivo com as querys SQL para MySQL
-- Criar banco de dados
CREATE DATABASE fraude_detector;

-- Usar banco de dados
USE fraude_detector;

-- Criar tabela para armazenar fraudes
CREATE TABLE fraudes (
    id INT AUTO_INCREMENT PRIMARY KEY,
    user_id INT NOT NULL,
    transaction_id INT NOT NULL,
    value FLOAT NOT NULL,
    country VARCHAR(50) NOT NULL,
    fraude VARCHAR(50) NOT NULL,
    timestamp DATETIME NOT NULL
);

-- Consultar todas as fraudes detectadas
SELECT * FROM fraudes;